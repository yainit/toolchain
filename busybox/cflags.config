# This configuration has been rewritten 2014-12-15
# (C) Dieter Miosga, 2009-2015-11-01
CONFIGVALUE=""

assign_variables()
{

  local EXT CFG
  EXT="$1"
  if [ "$EXT" != "" ]; then
    CFG=CONFIG$EXT
    eval CONFIGVALUE=\$$CFG
  fi
  if [ "$CONFIGVALUE" != "" ]; then
    return 0
  else
    return 1
  fi

}

#
EXTENTS="x86Os x86 x86mmxOs x86mmx k6p3 k7p4 k8p5 k9c2 atom corex coreavx coreavx2 k18 k16 k15 k14 k10 k9 k8 k7 k6 k5 k5Os init soft debug"
#
COMMONFLAGS="-fno-tracer -fno-jump-tables -fno-stack-protector -fomit-frame-pointer -momit-leaf-frame-pointer -fno-exceptions -fno-short-double -fno-math-errno -fno-trapping-math -fno-delete-null-pointer-checks -fno-var-tracking-assignments -fno-tracer -ffreestanding --param max-inline-insns-single=131072 --param inline-unit-growth=350 --param ggc-min-expand=300 --param ggc-min-heapsize=524288"
#
#########      INTEL X86 PROCESSORS
#
#  fpu-generic: optimized for size
CONFIGx86Os=" -Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -mhard-float -Os -g0 -march=i586 -mtune=generic -mfpmath=387 -mfancy-math-387 -mno-3dnow -mno-mmx -mno-sse -mno-sse2 -mno-sse3 -mno-ssse3 -mno-sse4 -mpreferred-stack-boundary=2 -fshort-enums -fshort-wchar $COMMONFLAGS"
#
#  fpu-generic: optimized for speed
#
CONFIGx86=" -Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -Ofast -fkeep-inline-functions  -falign-functions -falign-jumps -falign-labels -falign-loops -fno-reorder-functions -freorder-blocks  -g0 -march=i586 -mtune=generic  -mhard-float -mno-3dnow -mno-mmx -mno-sse -mno-sse2 -mno-sse3 -mno-ssse3 -mno-sse4 -mfpmath=387 -mpreferred-stack-boundary=2 -fshort-enums  -fshort-wchar $COMMONFLAGS "
#
# mmx-generic: optimized for size
#
CONFIGx86mmxOs="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32  -Os -g0 -march=pentium-mmx -mtune=generic -mhard-float -mno-3dnow -mmmx -mno-sse -mno-sse2 -mno-sse3 -mno-ssse3 -mno-sse4 -mpreferred-stack-boundary=3 -ftree-vectorize -ffast-math -fshort-enums -fshort-wchar $COMMONFLAGS"
#
# mmx-generic:  optimized for speed
#
CONFIGx86mmx="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32  -Ofast -fkeep-inline-functions  -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -mtune=pentium-mmx -march=pentium-mmx -mhard-float -mno-3dnow -mmmx -mno-sse -mno-sse2 -mno-sse3 -mno-ssse3 -mno-sse4 -mno-sse4a -mpreferred-stack-boundary=3 -ftree-vectorize  -fpeel-loops -funroll-loops -fshort-enums -fshort-wchar $COMMONFLAGS"
#
# sse-generic: for pentium3 and athlon-xp/sempron  use the same config
#
CONFIGk6p3="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -Ofast -fkeep-inline-functions -fgcse-sm -fgcse-las -g0 -march=i686 -mtune=generic  -falign-functions -falign-jumps -falign-labels -falign-loops -mhard-float -mno-3dnow -mmmx -msse -ftree-vectorize -mno-sse2 -mno-sse3 -mno-ssse3 -mno-sse4 -mno-sse4a -mpreferred-stack-boundary=3 -mfpmath=387 -msseregparm -fshort-enums -fshort-wchar  $COMMONFLAGS"
#
# sse2-generic:  for pentium-m,pentium4,athlon64,sempron64 use the same config
#
CONFIGk7p4="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -Ofast  -fkeep-inline-functions -fgcse-sm -fgcse-las -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -march=i686 -mtune=generic -mhard-float -mno-3dnow -mmmx -msse -msse2 -mno-sse3 -mno-ssse3 -mno-sse4 -mno-sse4a -mpreferred-stack-boundary=4 -mfpmath=387 -ftree-vectorize -fshort-enums -fshort-wchar $COMMONFLAGS"
#
# sse3-generic: for prescott,nocona and athlon64/FX/X2 use the same config
#
CONFIGk8p5="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -Ofast  -fkeep-inline-functions -fgcse-sm -fgcse-las -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -march=prescott -mtune=generic -mno-movbe -ftree-vectorize -mhard-float -mno-3dnow -mmmx -msse -msse2 -msse3 -mno-ssse3 -mno-sse4 -mno-sse4a -msseregparm -m128bit-long-double -mpreferred-stack-boundary=4 -mfpmath=387  -fshort-enums -fshort-wchar $COMMONFLAGS"
#
# sse4x-generic: for core/core2 / phenom, k10 and opteron use same config without using sse4x
#          the use of sse4a would break sse4.1/sse4.2 and vice versa
#          for all processors the EM64T/AMD64 extensions are compiled in -> check for pni and dtes64 or lahf_lm|cx16, cache_alignemt: >=64
#
CONFIGk9c2="-Wall -Wextra -Wa,--warn,-msse-check=warning -Ofast -fkeep-inline-functions -fgcse-sm -fgcse-las -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -march=nocona -mtune=generic -mhard-float -mno-3dnow -mmmx -msse -msse2 -msse3 -mno-movbe -mno-ssse3 -mno-sse4 -mno-sse4a -mno-movbe -mno-cx16 -msahf -m128bit-long-double  -ftree-vectorize -mpreferred-stack-boundary=4 -mfpmath=387 -fshort-enums -fshort-wchar -pipe  $COMMONFLAGS --param l1-cache-line-size=64 --param l1-cache-size=16 --param l2-cache-size=2048"
#
# ssse3: for atom/core2  use config without using any sse4x
#
CONFIGatom="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=core2 -Ofast  -fkeep-inline-functions -fgcse-sm -fgcse-las -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -march=i686 -mtune=core2 -mhard-float -mno-3dnow -mmmx -msse -msse2 -msse3 -mssse3 -mno-movbe -mno-sse4 -mno-sse4a -mpreferred-stack-boundary=4 -msseregparm -m128bit-long-double -mfpmath=sse -ftree-vectorize -fpeel-loops -funroll-loops -funsafe-loop-optimizations -fshort-enums -fshort-wchar -pipe $COMMONFLAGS  --param l1-cache-line-size=64 --param l1-cache-size=16 --param l2-cache-size=2048"
#
# sse4.2 and sse4.1: for Intel core i3/i5/i7 xeon use same config with using sse4.x
#
CONFIGcorex="-Wall -Wextra -Wa,--warn,-msse-check=warning -Ofast -fkeep-inline-functions -fgcse-sm -fgcse-las -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -march=core2 -mtune=core2 -mhard-float -mno-3dnow -mmmx -msse -msse2 -msse3 -mssse3 -msse4.1 -msse4.2 -msseregparm -m128bit-long-double -mpreferred-stack-boundary=4 -mfpmath=sse -fno-exceptions -fno-trapping-math -fno-math-errno -fomit-frame-pointer -momit-leaf-frame-pointer -fno-short-double -ffreestanding -fshort-wchar -fno-jump-tables  -fpeel-loops -funsafe-loop-optimizations -fno-stack-protector -fno-tracer -fno-delete-null-pointer-checks -pipe --param max-inline-insns-single=131072 --param inline-unit-growth=350 --param ggc-min-expand=300 --param ggc-min-heapsize=524288  --param l1-cache-line-size=64 --param l1-cache-size=16 --param l2-cache-size=2048"
#
#
# sse4.2 and sse4.1: for Intel core i3/i5/i7 xeon use same config with using sse4.x
#
CONFIGcoreavx="-Wall -Wextra -Wa,--warn,-msse-check=warning,-msse2avx -Ofast  -fkeep-inline-functions -fexpensive-optimizations -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -march=corei7  -mtune=sandybridge  -mhard-float -mno-3dnow  -mmmx -msse -msse2 -msse3 -mssse3 -msse4 -mno-sse4a -mavx  -msse2avx -m128bit-long-double  -mpreferred-stack-boundary=4 -ftree-vectorize -funsafe-loop-optimizations -fexpensive-optimizations -fshort-enums -fshort-wchar -pipe  $COMMONFLAGS --param l1-cache-line-size=64 --param l1-cache-size=16 --param l2-cache-size=2048 "
#
#
# sse4.2 and sse4.1: for Intel core i3/i5/i7 xeon use same config with using sse4.x
#
CONFIGcoreavx2="-Wall -Wextra -Wa,--warn,-msse-check=warning,-msse2avx  -Ofast  -fkeep-inline-functions -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -march=haswell -mtune=sandybridge -mhard-float -mno-3dnow  -mmmx -msse -msse2 -msse3 -mssse3 -msse4 -mno-sse4a  -mpclmul -mpopcnt -maes -mavx -mavx2 -mfma -mbmi2  -msse2avx -mmovbe -msse2avx -m128bit-long-double  -mpreferred-stack-boundary=4 -ftree-vectorize -funsafe-loop-optimizations -pipe $COMMONFLAGS --param l1-cache-line-size=64 --param l1-cache-size=16 --param l2-cache-size=2048"
#
# AMD X86 PROCESSORS
#
#  AMD Excavator / Bulldozer Version 4 with AVX2 BMI2 support
CONFIGk18="-Wall -Wextra -Wa,--warn,-msse2avx  -Ofast  -fkeep-inline-functions  -falign-functions -falign-jumps -falign-labels -falign-loops  -g0 -march=bdver4 -mtune=bdver4 -mhard-float -m3dnow -mmmx -msse -msse2 -msse3 -mssse3 -mno-sse4a -msse4 -mcx16 -msahf -mpclmul -mavx -mavx2 -mbmi2 -mf16c -mfma4 -msse2avx -mpreferred-stack-boundary=4 -pipe $COMMONFLAGS --param l1-cache-line-size=64 --param l1-cache-size=16 --param l2-cache-size=2048"
#
#  AMD Bobcat II / Bulldozer  Version 3  with AVX  support
#
CONFIGk16="-Wall -Wextra -Wa,--warn,-msse2avx  -Ofast  -fkeep-inline-functions  -falign-functions -falign-jumps -falign-labels -falign-loops  -g0 -march=btver2 -mtune=btver2 -mhard-float -m3dnow  -mmmx -msse -msse2 -msse3 -mssse3 -mno-sse4a -msse4 -mcx16 -msahf -mpclmul -mavx -msse2avx -m128bit-long-double  -mpreferred-stack-boundary=4 -mfpmath=sse -pipe $COMMONFLAGS --param l1-cache-line-size=64 --param l1-cache-size=16 --param l2-cache-size=2048 "
#
# avx+sse4a+sse4.2,sse4.1,ssse3 : for AMD core K15 FX-Processor Bulldozer version 1, 
# all with using mmx, sse3 , ssse3,sse4.x, AES, AVX
# without sse4a and 3dnow, 3dnowext, fma4, fma, abm, lwp, xop 
#
CONFIGk15="-Wall -Wextra -Wa,--warn,-msse2avx -march=bdver1 -mtune=core2 -Ofast -fpeel-loops -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -mhard-float -mno-fma -mno-fma4 -mno-movbe -mno-bmi -mno-xop -mno-lwp -mno-abm -mno-f16c -mmmx -mno-3dnow -mssse3 -msse4 -mpclmul -maes -msse4a -msahf -mcx16 -m128bit-long-double -fno-short-double -mfpmath=sse -msse2avx -mvzeroupper -mprefer-avx128 -mavx -mno-avx2 -mpreferred-stack-boundary=4 -pipe $COMMONFLAGS --param l1-cache-line-size=64 --param l1-cache-size=16 --param l2-cache-size=2048 "
#
# AMD Bobcat I / sse4a+ssse3+sse3
#
CONFIGk14="-Wall -Wextra -Wa,--warn,-msse2avx,-mtune=btver1 -Ofast  -fkeep-inline-functions -fpeel-loops -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -march=btver1 -mtune=btver1 -mhard-float -m3dnow -mmmx -msse -msse2 -msse3 -mssse3 -msse4a -mno-sse4 -mcx16 -msahf -mpreferred-stack-boundary=4 -msseregparm -mfpmath=sse -fshort-enums -pipe $COMMONFLAGS --param l1-cache-line-size=64 --param l1-cache-size=16 --param l2-cache-size=2048"
#
# sse4a +sse3: for AMD core K10, Barcelona, K12, Athlon II, Opteron with using sse4a and 3dnow, 3dnowext
#
CONFIGk10="-Wall -Wextra -Wa,--warn,-msse-check=warning -Ofast -fkeep-inline-functions  -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -march=amdfam10  -mtune=amdfam10  -mhard-float -m3dnow  -mmmx -msse -msse2 -msse3 -mno-ssse3 -msse4a -mno-sse4 -msseregparm -m128bit-long-double -mpreferred-stack-boundary=4 -mfpmath=sse  -fshort-wchar -fpeel-loops -funsafe-loop-optimizations -fexpensive-optimizations    -fshort-enums -pipe $COMMONFLAGS --param l1-cache-line-size=64 --param l1-cache-size=16 --param l2-cache-size=2048"
#
# sse3: for AMD core K9 : Athlon64 X2, Athlon II X2, Opteron with sse3/pni and 3dnow/3dnowext
#
CONFIGk9="-Wall -Wextra -Wa,--warn,-msse-check=warning -Ofast -fkeep-inline-functions -fgcse-sm -fgcse-las -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -march=k8-sse3 -mtune=k8-sse3 -mhard-float -m3dnow -mmmx -msse -msse2 -msse3 -mno-ssse3 -mno-sse4a -msseregparm -m128bit-long-double -mpreferred-stack-boundary=4 -mfpmath=sse   -ftree-vectorize -fshort-enums -fpeel-loops -funroll-loops -funsafe-loop-optimizations -fshort-enums -fshort-wchar $COMMONFLAGS --param l1-cache-line-size=64 --param l1-cache-size=16 --param l2-cache-size=2048 -pipe"
#
# sse2: for AMD core K8 : Athlon64, Athlon-FX, with sse2 and 3dnow/3dnowext
#
CONFIGk8="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -Ofast  -fkeep-inline-functions -fgcse-sm -fgcse-las -falign-functions -falign-jumps -falign-labels -falign-loops  -g0 -march=k8 -mtune=k8  -mhard-float -m3dnow  -mmmx -msse -msse2 -mno-sse3 -mno-ssse3 -mno-sse4a -msseregparm -m96bit-long-double -mpreferred-stack-boundary=3 -mfpmath=387 -ftree-vectorize -fpeel-loops -funroll-loops -funsafe-loop-optimizations -fshort-enums -fshort-wchar $COMMONFLAGS "
#
# sse:  for AMD core K7 : Athlon-4, Athlon-XP, Barton with sse, 3dnow,3dnowext
#
CONFIGk7="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -Ofast -fkeep-inline-functions -fgcse-sm -fgcse-las -falign-functions -falign-jumps -falign-labels -falign-loops -g0 -march=athlon -mtune=athlon-xp -mhard-float -m3dnow  -mmmx -msse -mno-sse2 -mno-sse3 -mno-ssse3 -mno-sse4a -msseregparm -mpreferred-stack-boundary=3 -mfpmath=387 -ftree-vectorize -fshort-enums -fshort-wchar -fpeel-loops -funroll-loops -funsafe-loop-optimizations -fshort-enums -fshort-wchar  $COMMONFLAGS "
#
# 3dnowext, mmx, i586,tsc: for all Athlon-Thunderbird compatibles
#
CONFIGk6="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -Ofast -fkeep-inline-functions -fgcse-sm -fgcse-las -fpeel-loops -falign-functions -falign-jumps -falign-labels -falign-loops -freorder-blocks -fno-reorder-functions -ftree-vectorize -g0 -march=i586 -mtune=athlon-tbird -mhard-float -m3dnow -mmmx -mno-sse -mno-sse2 -mno-sse3 -mno-ssse3 -mno-sse4a -mpreferred-stack-boundary=2 -mfpmath=387  -funsafe-loop-optimizations -fshort-enums -fshort-wchar $COMMONFLAGS"
#
# 3dnow, mmx, i586 tsc : for all K5 compatibles, Athlon-Thunderbird, Geode 
#
CONFIGk5="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -Ofast  -fkeep-inline-functions  -falign-functions -falign-jumps -falign-labels -falign-loops  -freorder-blocks -fno-reorder-functions -ftree-vectorize -g0 -march=i586 -mtune=generic -mhard-float -m3dnow  -mmmx -mno-sse -mno-sse2 -mno-sse3 -mno-ssse3 -mno-sse4a -mpreferred-stack-boundary=2 -mfpmath=387 -fpeel-loops -funroll-loops   -funsafe-loop-optimizations -fexpensive-optimizations -fshort-enums -fshort-wchar  $COMMONFLAGS"
#
# mmx, i586, no-3dnow, tsc : for all Pentium-Classic and pentium-mmx compatibles, K5,K6,Athlon-TBird 
#
CONFIGk5Os="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -Os -g0 -march=i586 -mtune=generic -mhard-float -mno-3dnow -mmmx -mno-sse -mno-sse2 -mno-sse3 -mno-ssse3 -mno-sse4a  -mpreferred-stack-boundary=2 -mfpmath=387 -ffast-math -fpeel-loops -funroll-loops -funsafe-loop-optimizations -fshort-enums -fshort-wchar $COMMONFLAGS "
#
# no-mmx, i486, no-3dnow : for all Winchip2 and pentium-mmx compatibles
#
CONFIGinit="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -Os -g0 -march=winchip2 -mtune=generic -mhard-float -mno-3dnow  -mno-mmx -mno-sse -mno-sse2 -mno-sse3 -mno-ssse3 -mno-sse4a -ffast-math -funsafe-loop-optimizations -fexpensive-optimizations  -fshort-enums -fshort-wchar  $COMMONFLAGS "
#
# Software floating point instruction set
#
CONFIGsoft="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32  -Os -Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32 -Os -g0 -march=i586 -mtune=generic -mno-3dnow -mno-mmx -mno-sse -fshort-enums -fshort-wchar -fno-stack-protector -fomit-frame-pointer -momit-leaf-frame-pointer -fno-delete-null-pointer-checks -fno-var-tracking-assignments -fno-tracer -ffreestanding --param max-inline-insns-single=131072 --param inline-unit-growth=350 --param ggc-min-expand=300 --param ggc-min-heapsize=524288 "
#
# Debugging version on i586tsc - Pentium-Classic base
#
CONFIGdebug="-Wall -Wextra -Wa,--warn,-msse-check=warning,-mtune=generic32  -g -O0 -march=i586 -mtune=generic -falign-functions -falign-jumps -falign-labels -falign-loops  -freorder-blocks -fno-reorder-functions -mno-3dnow -mno-mmx -mno-sse -mno-sse2 -mno-sse3 -mno-ssse3 -mno-sse4a -fno-delete-null-pointer-checks -funsafe-loop-optimizations -fexpensive-optimizations --param max-inline-insns-single=131072 --param inline-unit-growth=350 --param ggc-min-expand=300 --param ggc-min-heapsize=524288 "


#
# Nocona    Intel(R) Pentium(R) D CPU 3.00GHz
# fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe nx lm constant_tsc pebs bts pni dtes64 monitor ds_cpl est cid cx16 xtpr pdcm lahf_lm
#
# Athlon64-X2   AMD Athlon(tm) 64 X2 Dual Core Processor 4400+
# fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt rdtscp lm 3dnowext 3dnow extd_apicid pni cx16 lahf_lm cmp_legacy svm extapic cr8_legacy 3dnowprefetch
#
# AMD Athlon(tm) II X2 245e Processor
# fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc nonstop_tsc extd_apicid pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt npt lbrv svm_lock nrip_save
#
# Phenom II X4
# fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc nonstop_tsc extd_apicid pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt npt lbrv svm_lock nrip_save
#
# atom  Intel(R) Atom(TM) CPU N270   @ 1.60GHz
# fpu vme de pse tsc msr pae mce cx8 sep mtrr pge mca cmov pat clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe constant_tsc up arch_perfmon pebs bts aperfmperf pni dtes64 monitor ds_cpl est tm2 ssse3 xtpr pdcm movbe lahf_lm
#
# AMD Zambezi  @ 3600 MHz   AMD FX(tm)-6100 Six-Core Processor  
#fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc nonstop_tsc extd_apicid aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb hw_pstate npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold
#
# AMD Kabini A4-5000 APU with Radeon(TM) HD Graphics MHz: 1500.000 cache size	: 2048 KB  cpu cores	: 4

# fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nonstop_tsc extd_apicid aperfmperf eagerfpu pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt topoext perfctr_nb bpext perfctr_l2 arat hw_pstate proc_feedback npt lbrv svm_lock nrip_save tsc_scale flushbyasid decodeassists pausefilter pfthreshold vmmcall bmi1 xsaveopt
